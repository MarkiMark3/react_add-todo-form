{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","users","userId","usersFromServer","find","user","getUser","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","App","useState","titleError","setTitleError","todosFromServer","setTodos","nameError","setnameError","setTitle","nameId","setNameId","getId","reduce","acc","Math","max","Infinity","action","method","onSubmit","event","preventDefault","trim","length","newTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49990536.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport usersFromServer from '../../api/users';\nimport { Users } from '../../types/users';\n\ntype Props = {\n  userId : number;\n};\n\nfunction getUser(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nexport const UserInfo: React.FC<Props> = ({ userId }) => {\n  const users: Users | null = getUser(userId);\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${users?.email}`}>\n      {users?.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todos } from '../../types/todos';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todos\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={\n        classNames('TodoInfo', {\n          'TodoInfo--completed': todo.completed,\n        })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      <UserInfo userId={todo.userId} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todos } from '../../types/todos';\n\ntype Props = {\n  todos: Todos[]\n\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todos } from './types/todos';\n\nexport const App = () => {\n  const [titleError, setTitleError] = useState(false);\n  const [todos, setTodos] = useState(todosFromServer);\n  const [nameError, setnameError] = useState(false);\n  const [title, setTitle] = useState('');\n  const [nameId, setNameId] = useState(0);\n\n  const getId = todos.reduce((acc, todo) => {\n    return Math.max(acc, todo.id);\n  }, -Infinity);\n\n  const reset = () => {\n    setTitle('');\n    setTitleError(false);\n    setnameError(false);\n    setNameId(0);\n  };\n\n  const addTodo = (newTodo: Todos) => {\n    setTodos([...todos, newTodo]);\n  };\n\n  const handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (nameId === 0) {\n      setnameError(true);\n    }\n\n    if (title.trim().length === 0) {\n      setTitleError(true);\n    }\n\n    const onSubmit = {\n      id: getId + 1,\n      title,\n      completed: false,\n      userId: nameId,\n    };\n\n    if (title.trim().length && nameId !== 0) {\n      addTodo(onSubmit);\n      reset();\n    }\n  };\n\n  const handleName = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setNameId(+event.target.value);\n    setnameError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          Title:&nbsp;&nbsp;\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleInput}\n          />\n          {titleError\n            ? <span className=\"error\">Please enter a title</span>\n            : ''}\n        </div>\n\n        <div className=\"field\">\n          User:&nbsp;\n          <select\n            data-cy=\"userSelect\"\n            value={nameId}\n            onChange={handleName}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {nameError\n            ? <span className=\"error\">Please choose a username</span>\n            : ''}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}